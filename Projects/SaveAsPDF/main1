
public class RevisionLog{
    	
    Stage window;
    static Scene scene;
    static ScrollPane pane;
    public static double numberOfFields = 2.1;
    public static int StartAtOne = 1;
    
    static Group group;
    
    static Rectangle2D primaryScreenBounds = ScreenResolutionClass.screenBounds();
    
    public static void revisionLogScene(Stage stage) throws ClassNotFoundException{
        

        ScrollPane pane = new ScrollPane();

        Group root = new Group();
        group = root;

        int screenWidth = ScreenResolutionClass.resolutionWidth();
        int screenHeight = ScreenResolutionClass.resolutionHeight();
        int fieldWidthAlignment = (int) ScreenResolutionClass.fieldWidthAlignment(screenWidth);
        int proportionalHeight = ScreenResolutionClass.proportionalHeight(screenHeight);
        double proportionalWidth = ScreenResolutionClass.proportionalWidth(screenWidth);
        double numberOfFields = 2.5;

        double scale = DSP.scale;  
        
        ArrayList<Button> buttons = ButtonClass.revisionLogButtons();
        for(int i = 0; i <buttons.size(); i++) {
        	root.getChildren().add(buttons.get(i));
        }
        ArrayList<Line> DrawingBorderLines = BorderClass.border1(); 
        for(int i=0; i < DrawingBorderLines.size(); i = i+1) {
            root.getChildren().add(DrawingBorderLines.get(i));  
        }

        ArrayList<Label> labels = LabelClass.revisionLogLabels();
        for(int i = 0; i < labels.size(); i++){
            root.getChildren().add(labels.get(i));
        }

        ArrayList<Label> borderLabels = LabelClass.borderLabels();
        for(int i = 0; i < borderLabels.size(); i++){
            root.getChildren().add(borderLabels.get(i));
        }

        ArrayList<TextField> textfields = TextfieldClass.revisionLogTextFields();
        for(int i = 0; i < textfields.size(); i++){
            root.getChildren().add(textfields.get(i));
        }
        ArrayList<TextArea> textarea = TextfieldClass.textArea();
        for(int i = 0; i < textarea.size(); i++){
            root.getChildren().add(textarea.get(i));
        }
        
        Line line1 = BorderClass.LineBlackNoFill(60, proportionalHeight, screenWidth-77, proportionalHeight);
        //root.getChildren().add(line1);

        
        pane.setContent(group);
        pane.setPannable(true);

        pane.setHbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);
        pane.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);
        
        pane.setPadding(new Insets(20, 0, 0, 25));
        scene = new Scene(root, Color.WHITE);

        stage.setScene(scene);
        stage.setTitle("Revision Log");
        
       
        stage.setX(primaryScreenBounds.getMinX());
        stage.setY(primaryScreenBounds.getMinY());
        stage.setWidth(primaryScreenBounds.getWidth());
        stage.setHeight(primaryScreenBounds.getHeight());

        stage.show();
        
    }